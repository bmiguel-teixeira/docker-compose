version: '3'
services:
  nginx:
    hostname: nginx
    image: nginx
    ports:
     - "80:80"
    volumes:
     - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
     - "./nginx/.htpasswd:/etc/nginx/.htpasswd"
    depends_on:
      - kibana
    networks:
      - kelk_nginx

  kibana:
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:6.6.0
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
     - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - kelk_nginx

  elasticsearch:
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
    environment:
      discovery.type: single-node
      cluster.name: docker-cluster
    volumes:
     - esdata1:/usr/share/elasticsearch/data
    ports:
     - "9200:9200"
    depends_on:
      - logstash
    networks:
      - kelk_nginx

  logstash:
    image: docker.elastic.co/logstash/logstash:6.6.0
    volumes:
     - "./logstash/:/usr/share/logstash/config/"
    depends_on:
      - kafka
    networks:
      - kelk_nginx

  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - zkdata1:/data
      - zklogs1:/datalog
    networks:
      - kelk_nginx

  kafkamanager:
    image: sheepkiller/kafka-manager
    hostname: kafkamanager
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "letmein"
    depends_on:
      - kafka
    networks:
      - kelk_nginx

  kafka:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://10.61.6.11:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafkadata1:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - kelk_nginx

networks:
  kelk_nginx:

volumes:
  esdata1:
    driver: local
  kafkadata1:
    driver: local
  zkdata1:
    driver: local
  zklogs1:
    driver: local